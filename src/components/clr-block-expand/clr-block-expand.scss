@import '../../utils/base.scss';


:host {
  display: block;

  .block {
    box-sizing: border-box;
    background-color: v(highlight);
    border-radius: 10px;
    padding: 10px;
    margin-bottom: 10px;
    transform: scale(1);
    filter: drop-shadow(0px 0px 0px #00000000);
    transition: transform 0.2s ease;
    transition: filter 0.2s ease;

    div.fade {
      background-image: linear-gradient(to bottom, rgba(v(highlight-fade), 0), rgba(v(highlight-fade), 1));
      position: relative;
      bottom: 0;
      width: 100%;
      height: 100px;
      margin-top: -100px;
    } 

    .header {
      background-position: center;
      background-repeat: no-repeat;
      background-size: cover;
      border-radius: 5px 5px 0 0;   
      .info {
        box-sizing: border-box;
        padding: 10px;
      }
    }

    .block-body{
      padding: 0px 10px;
      font-size: v(fs-s);
      font-family: v(secondaryFontFam);
    }
    .block-body, .block-expand-body {
      text-align: center;
    }    
    .expand {
      display: flex;
      flex-direction: column;
      width: 95%;
      height: 0px;//*overwritten by js*/
      overflow-y: hidden;
  
      .expandInner {
        display: flex;
        flex-direction: column;
  
        ::slotted(*){
          display: inline-flex;
          min-height: 40px;
          line-height: 2.5;
          color: inherit;
          font-size: inherit;
          font-family: inherit;
        }
      }
    }
    .pad25 {
      padding-bottom: 25px;
    }
    .arrowWrap {
      width: 100%;
      display: flex;
      align-items: flex-end;
      justify-content: space-around;

      .arrow {
        border-left: 10px solid transparent;
        border-right: 10px solid transparent;
        border-top: 10px solid v(btnColor);
      }
    }

  }

 /* @include respond(tablet) {
    .block {
      &.quater {
        width: calc(100vw - 45px);
        min-width: 200px;
      }
      &.third {
        width: calc(100vw - 45px);
        min-width: 200px;
      }
      &.half {
        width: calc(100vw - 45px);
        min-width: 200px;
      }
    }
  }
  @include respond(mobile) {
    .block {
      &.quater {
        width: calc(100vw - 45px);
        min-width: 200px;
      }
      &.third {
        width: calc(100vw - 45px);
        min-width: 200px;
      }
      &.half {
        width: calc(100vw - 45px);
        min-width: 200px;
      }
    }
  }*/


}
